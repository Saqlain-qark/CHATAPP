{"ast":null,"code":"var _jsxFileName = \"C:\\\\chat_app\\\\chatapp\\\\src\\\\components\\\\Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { signOut } from 'firebase/auth';\nimport { auth } from '../firebase';\nimport { AuthContext } from '../context/AuthContext';\nimport DarkModeToggle from 'react-dark-mode-toggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [isDarkMode, setIsDarkMode] = useState(() => false);\n  const handleDarkModeChange = checked => {\n    setIsDarkMode(checked);\n    // Handle dark mode change if needed\n    // You can save the dark mode preference in localStorage or a user setting\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `navbar ${isDarkMode ? 'dark-mode' : 'light-mode'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"logo\",\n      children: \"Chit Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentUser.photoURL,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: currentUser.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => signOut(auth),\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DarkModeToggle, {\n      onChange: handleDarkModeChange,\n      checked: isDarkMode,\n      size: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"V8vdUpXNlRgpzFHoq7PWOVlLcPk=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useContext","signOut","auth","AuthContext","DarkModeToggle","jsxDEV","_jsxDEV","Navbar","_s","currentUser","isDarkMode","setIsDarkMode","handleDarkModeChange","checked","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","photoURL","alt","displayName","onClick","onChange","size","_c","$RefreshReg$"],"sources":["C:/chat_app/chatapp/src/components/Navbar.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { signOut } from 'firebase/auth';\nimport { auth } from '../firebase';\nimport { AuthContext } from '../context/AuthContext';\nimport DarkModeToggle from 'react-dark-mode-toggle';\n\nconst Navbar = () => {\n  const { currentUser } = useContext(AuthContext);\n  const [isDarkMode, setIsDarkMode] = useState(() => false);\n\n  const handleDarkModeChange = (checked) => {\n    setIsDarkMode(checked);\n    // Handle dark mode change if needed\n    // You can save the dark mode preference in localStorage or a user setting\n  };\n\n  return (\n    <div className={`navbar ${isDarkMode ? 'dark-mode' : 'light-mode'}`}>\n      <span className=\"logo\">Chit Chat</span>\n      <div className=\"user\">\n        <img src={currentUser.photoURL} alt=\"\" />\n        <span>{currentUser.displayName}</span>\n        <button onClick={() => signOut(auth)}>logout</button>\n      </div>\n      <DarkModeToggle\n        onChange={handleDarkModeChange}\n        checked={isDarkMode}\n        size={50}\n      />\n    </div>\n  );\n};\n\nexport default Navbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,IAAI,QAAQ,aAAa;AAClC,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,cAAc,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAY,CAAC,GAAGT,UAAU,CAACG,WAAW,CAAC;EAC/C,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,MAAM,KAAK,CAAC;EAEzD,MAAMa,oBAAoB,GAAIC,OAAO,IAAK;IACxCF,aAAa,CAACE,OAAO,CAAC;IACtB;IACA;EACF,CAAC;;EAED,oBACEP,OAAA;IAAKQ,SAAS,EAAG,UAASJ,UAAU,GAAG,WAAW,GAAG,YAAa,EAAE;IAAAK,QAAA,gBAClET,OAAA;MAAMQ,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvCb,OAAA;MAAKQ,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBT,OAAA;QAAKc,GAAG,EAAEX,WAAW,CAACY,QAAS;QAACC,GAAG,EAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCb,OAAA;QAAAS,QAAA,EAAON,WAAW,CAACc;MAAW;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtCb,OAAA;QAAQkB,OAAO,EAAEA,CAAA,KAAMvB,OAAO,CAACC,IAAI,CAAE;QAAAa,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACNb,OAAA,CAACF,cAAc;MACbqB,QAAQ,EAAEb,oBAAqB;MAC/BC,OAAO,EAAEH,UAAW;MACpBgB,IAAI,EAAE;IAAG;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACX,EAAA,CAzBID,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AA2BZ,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}